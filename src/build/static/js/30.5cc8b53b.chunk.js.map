{"version":3,"sources":["components/Personal/StyleSelect.js","store/actions/personalActions.js"],"names":["connect","state","LeftDataRaw","styleList","listStyle","changeStyle","hairType","dispatch","type","payload","LeftData","filter","v","content","className","map","i","onClick","style","background","pic","_name"],"mappings":"6IA+DeA,uBALS,SAAAC,GAAK,MAAI,CAE/BC,YAAYD,EAAME,UAAUC,aAGS,CAACC,YChDb,SAACC,GAAD,OAAc,SAACC,GACtCA,EAAS,CACLC,KAAM,eACNC,QAAS,CACLD,KAAMF,QD4CHN,EArDK,SAAC,GAA+B,IAA9BE,EAA6B,EAA7BA,YAAYG,EAAiB,EAAjBA,YAG1BK,EAAUR,EAAYS,QAAO,SAACC,GAAD,MAAiB,SAAZA,EAAEC,WAY1C,OACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,2CAEF,qBAAKA,UAAU,qBAAf,SACGJ,EAASK,KAAI,SAACH,EAAGI,GAChB,OACE,qBACIC,QAAS,kBAZOC,EAYgBN,EAAEJ,UAX5CH,EAAYa,GADa,IAACA,GAclBJ,UAAU,yBACVI,MAAO,CACLC,WAAW,qCAAD,OAAuCP,EAAEQ,IAAzC,OALd,SAQE,qBAAKN,UAAU,0BAAf,SACE,+BAAOF,EAAES,WAPNL","file":"static/js/30.5cc8b53b.chunk.js","sourcesContent":["import React, { useState,useReducer,useEffect } from \"react\";\r\n// import { LeftData } from \"./SliderStyleData\";\r\nimport { personalizeReducer } from \"../../reducers/personalizeReducer\";\r\n// redux\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n// action\r\nimport { changeStyle } from \"../../store/actions/personalActions\";\r\n\r\n\r\nconst StyleSelect = ({LeftDataRaw,changeStyle}) => {\r\n  // handle data\r\n  \r\n  const LeftData= LeftDataRaw.filter((v)=>v.content===\"main\")\r\n\r\n  //reducer select \r\n    // const [styleState,dispatch] = useReducer(personalizeReducer,{\r\n    //     hairType:'',\r\n    //     length:'',\r\n    //     color:'',\r\n    // })\r\n    // handler style click\r\n    const handlerHStyleClick = (style)=>{\r\n      changeStyle(style)\r\n    }\r\n  return (\r\n    <div className=\"leftSelect grid\">\r\n      <div className=\"row-leftSelect__tittle\">\r\n        <span>Style</span>\r\n      </div>\r\n      <div className=\"row row-leftSelect\">\r\n        {LeftData.map((v, i) => {\r\n          return (\r\n            <div\r\n                onClick={()=>handlerHStyleClick(v.type)}\r\n              key={i}\r\n              className=\"col col-leftSelect l-3\"\r\n              style={{\r\n                background: `center top / cover  no-repeat url(${v.pic}) `,\r\n              }}\r\n            >\r\n              <div className=\"col-leftSelect__content\">\r\n                <span>{v._name}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// Prop\r\nStyleSelect.propTypes ={\r\n  LeftDataRaw:PropTypes.array.isRequired,\r\n  changeStyle:PropTypes.func.isRequired\r\n}\r\n\r\n// state = store => rootReducer => styleList(current reducer : personalReducer) => state (initial state) \r\nconst mapStateToProps = state =>({\r\n  // (LeftDataRaw) : prop in component\r\n  LeftDataRaw:state.styleList.listStyle\r\n})\r\n//connect (state,action)\r\nexport default connect(mapStateToProps,{changeStyle})(StyleSelect);\r\n","// action creator\r\n//cach 1\r\n// export const changeStyle = () => {\r\n//     const changeStyleAction = (dispatch) => {\r\n//         dispatch({\r\n//             type: \"CHANGE_STYLE\",\r\n//             payload: {\r\n//                 type: \"test hair type\",\r\n//             },\r\n//         });\r\n//     };\r\n//     return changeStyleAction\r\n// };\r\n\r\n// short one\r\nexport const changeStyle = (hairType) => (dispatch) => {\r\n    dispatch({\r\n        type: \"CHANGE_STYLE\",\r\n        payload: {\r\n            type: hairType,\r\n        },\r\n    });\r\n};"],"sourceRoot":""}