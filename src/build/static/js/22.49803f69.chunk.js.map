{"version":3,"sources":["components/Home/index.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useEffectOnce.js","../node_modules/react-use/esm/useUnmount.js","../node_modules/react-use/esm/useRafState.js","../node_modules/react-use/esm/useWindowScroll.js"],"names":["Hero","React","lazy","BigCenterPic","ScrollToTop","About","Service","IntroShop","OurFooter","Index","useState","toTop","setToTop","y","useWindowScroll","useEffect","handleScroll","e","window","addEventListener","removeEventListener","fallback","navBtTheme","onClick","scrollTo","top","behavior","props","isBrowser","useEffectOnce","effect","useUnmount","fn","fnRef","useRef","current","useRafState","initialState","frame","_a","state","setState","setRafState","useCallback","value","cancelAnimationFrame","requestAnimationFrame","x","pageXOffset","pageYOffset","handler","obj","args","_i","arguments","length","apply","on","capture","passive","off"],"mappings":"2JAGMA,EAAOC,IAAMC,MAAK,kBAAM,wDACxBC,EAAeF,IAAMC,MAAK,kBAAM,wDAChCE,EAAcH,IAAMC,MAAK,kBAAM,yDAC/BG,EAAQJ,IAAMC,MAAK,kBAAM,wDACzBI,EAAUL,IAAMC,MAAK,kBAAM,wDAC3BK,EAAYN,IAAMC,MAAK,kBAAM,kCAC7BM,EAAWP,IAAMC,MAAM,kBAAI,wDA0ClBO,UAxCD,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACXC,EADW,KACJC,EADI,KAEVC,EAAMC,cAAND,EAERE,qBAAU,WACR,IAAMC,EAAe,SAACC,GAElBL,EADEC,EAAI,MAQV,OAFAK,OAAOC,iBAAiB,UAAU,SAACF,GAAD,OAAOD,OAElC,WAELE,OAAOE,oBAAoB,UAAU,SAACH,GAAD,OAAOD,UAE7C,CAACH,IAQJ,OACE,eAAC,WAAD,CAAUQ,SAAU,oDAApB,UACG,IACD,cAACrB,EAAD,CAAMsB,WAAYT,IAClB,cAACV,EAAD,IACA,cAACE,EAAD,IACA,cAACD,EAAD,CAAamB,QAbU,WACzBL,OAAOM,SAAS,CACdC,IAAK,EACLC,SAAU,YAUgCC,MAAOhB,IACjD,cAACL,EAAD,CAASO,EAAGA,IACZ,cAACN,EAAD,IACA,cAACC,EAAD,S,4CC3BC,IAAIoB,EAA8B,qBAAXV,OCffW,EAHK,SAAUC,GAC1Bf,oBAAUe,EAAQ,KCMPC,EANE,SAAUC,GACvB,IAAIC,EAAQC,iBAAOF,GAEnBC,EAAME,QAAUH,EAChBH,GAAc,WAAc,OAAO,WAAc,OAAOI,EAAME,eCUnDC,EAdG,SAAUC,GACxB,IAAIC,EAAQJ,iBAAO,GACfK,EAAK7B,mBAAS2B,GAAeG,EAAQD,EAAG,GAAIE,EAAWF,EAAG,GAC1DG,EAAcC,uBAAY,SAAUC,GACpCC,qBAAqBP,EAAMH,SAC3BG,EAAMH,QAAUW,uBAAsB,WAClCL,EAASG,QAEd,IAIH,OAHAb,GAAW,WACPc,qBAAqBP,EAAMH,YAExB,CAACK,EAAOE,ICqBJ5B,IAhCO,WAClB,IAAIyB,EAAKH,GAAY,WAAc,MAAQ,CACvCW,EAAGnB,EAAYV,OAAO8B,YAAc,EACpCnC,EAAGe,EAAYV,OAAO+B,YAAc,MAChCT,EAAQD,EAAG,GAAIE,EAAWF,EAAG,GA0BrC,OAzBAxB,qBAAU,WACN,IAAImC,EAAU,WACVT,GAAS,SAAUD,GACf,IAAIQ,EAAc9B,OAAO8B,YAAaC,EAAc/B,OAAO+B,YAG3D,OAAOT,EAAMO,IAAMC,GAAeR,EAAM3B,IAAMoC,EACxC,CACEF,EAAGC,EACHnC,EAAGoC,GAELT,MAUd,OALAU,IJvBD,SAAYC,GAEf,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAKC,EAAK,GAAKC,UAAUD,GAEzBF,GAAOA,EAAIhC,kBACXgC,EAAIhC,iBAAiBqC,MAAML,EAAKC,GIkBhCK,CAAGvC,OAAQ,SAAUgC,EAAS,CAC1BQ,SAAS,EACTC,SAAS,IAEN,YJnBR,SAAaR,GAEhB,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAKC,EAAK,GAAKC,UAAUD,GAEzBF,GAAOA,EAAI/B,qBACX+B,EAAI/B,oBAAoBoC,MAAML,EAAKC,GIc/BQ,CAAI1C,OAAQ,SAAUgC,MAE3B,IACIV","file":"static/js/22.49803f69.chunk.js","sourcesContent":["import React, { Suspense, useState, useEffect } from \"react\";\r\nimport { useWindowScroll } from \"react-use\";\r\n\r\nconst Hero = React.lazy(() => import(\"../Home/Hero\"));\r\nconst BigCenterPic = React.lazy(() => import(\"../Home/BigCenterPic\"));\r\nconst ScrollToTop = React.lazy(() => import(\"../Util/ScrollToTop\"));\r\nconst About = React.lazy(() => import(\"../Home/About\"));\r\nconst Service = React.lazy(() => import(\"./Service\"));\r\nconst IntroShop = React.lazy(() => import(\"./IntroShop\"));\r\nconst OurFooter =React.lazy (()=>import(\"./OurFooter\"))\r\n\r\nconst Index = () => {\r\n  const [toTop, setToTop] = useState(false);\r\n  const { y } = useWindowScroll();\r\n  // scroll\r\n  useEffect(() => {\r\n    const handleScroll = (e) => {\r\n      if (y > 400) {\r\n        setToTop(true);\r\n      } else {\r\n        setToTop(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", (e) => handleScroll(e));\r\n\r\n    return () => {\r\n      //unsubscribe\r\n      window.removeEventListener(\"scroll\", (e) => handleScroll(e));\r\n    };\r\n  }, [y]);\r\n  const scrollToTopHandler = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  //Render\r\n  return (\r\n    <Suspense fallback={<h1> Home loading.... </h1>}>\r\n      {\" \"}\r\n      <Hero navBtTheme={y} />\r\n      <BigCenterPic />\r\n      <About  />\r\n      <ScrollToTop onClick={scrollToTopHandler} props={toTop} /> \r\n      <Service y={y}/>\r\n      <IntroShop />\r\n      <OurFooter/>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import { useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\nvar useUnmount = function (fn) {\n    var fnRef = useRef(fn);\n    // update the ref each render so if it change the newest callback will be invoked\n    fnRef.current = fn;\n    useEffectOnce(function () { return function () { return fnRef.current(); }; });\n};\nexport default useUnmount;\n","import { useCallback, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\nvar useRafState = function (initialState) {\n    var frame = useRef(0);\n    var _a = useState(initialState), state = _a[0], setState = _a[1];\n    var setRafState = useCallback(function (value) {\n        cancelAnimationFrame(frame.current);\n        frame.current = requestAnimationFrame(function () {\n            setState(value);\n        });\n    }, []);\n    useUnmount(function () {\n        cancelAnimationFrame(frame.current);\n    });\n    return [state, setRafState];\n};\nexport default useRafState;\n","import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nimport useRafState from './useRafState';\nvar useWindowScroll = function () {\n    var _a = useRafState(function () { return ({\n        x: isBrowser ? window.pageXOffset : 0,\n        y: isBrowser ? window.pageYOffset : 0,\n    }); }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            setState(function (state) {\n                var pageXOffset = window.pageXOffset, pageYOffset = window.pageYOffset;\n                //Check state for change, return same state if no change happened to prevent rerender\n                //(see useState/setState documentation). useState/setState is used internally in useRafState/setState.\n                return state.x !== pageXOffset || state.y !== pageYOffset\n                    ? {\n                        x: pageXOffset,\n                        y: pageYOffset,\n                    }\n                    : state;\n            });\n        };\n        //We have to update window scroll at mount, before subscription.\n        //Window scroll may be changed between render and effect handler.\n        handler();\n        on(window, 'scroll', handler, {\n            capture: false,\n            passive: true,\n        });\n        return function () {\n            off(window, 'scroll', handler);\n        };\n    }, []);\n    return state;\n};\nexport default useWindowScroll;\n"],"sourceRoot":""}