{"version":3,"sources":["apis/index.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","components/Form/register/index.js"],"names":["getRegion","a","axios","get","getRegionDistrict","province_id","postAvailability","data","headers","alert","console","log","post","postReserver","map","children","func","index","React","child","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","props","_jsx","role","classNames","width","ProgressBar","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps","CountrySelector","lazy","RegisterWrapper","styled","div","Bg","lowerCaseLetters","upperCaseLetters","numbers","Index","keyN","keyL","keyU","navigate","useNavigate","registerUser","useContext","AuthContext","useState","check","setCheck","numCheck","setNumCheck","fName","setFName","lName","setLName","pBar","setPBar","listRegion","setListRegion","useEffect","then","res","results","catch","e","validator","input","regEx","value","target","match","setRegisterForm","registerForm","name","email","firstName","lastName","password","city","address","handlerRegister","preventDefault","success","message","action","method","onSubmit","md","floating","type","id","placeholder","onInput","emailRex","test","undefined","validateEmail","onChange","valid","invalid","color","htmlFor","required","phoneCheck","fallback","regions","passwordCheck","count","length","to"],"mappings":"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","file":"static/js/15.909d3411.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//Region list function\r\nexport const getRegion = async() =>\r\n    await axios.get(\"https://vapi.vnappmob.com/api/province\");\r\n\r\nexport const getRegionDistrict = async(province_id) =>\r\n    await axios.get(\r\n        `https://vapi.vnappmob.com/api/province/district/${province_id}`\r\n    );\r\n\r\n//Booking function\r\nexport const postAvailability = async(data, headers) => {\r\n    alert(\"Availability\");\r\n    console.log(data, headers);\r\n    return await axios.post(`http://localhost:5000/api/book/availability`, data, {\r\n        headers,\r\n    });\r\n};\r\nexport const postReserver = async(data, headers) => {\r\n    alert(\"Reserved\");\r\n    console.log(data, headers);\r\n    return await axios.post(\r\n        `http://localhost:5000/api/book/availability/reserve`,\r\n        data, {\r\n            headers,\r\n        }\r\n    );\r\n};","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import React, { useState, Suspense, useEffect,useContext } from \"react\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  FormFeedback,\r\n  FormText,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\nimport \"../../../assets/css/member/register.css\";\r\n// import { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n// import CenterPic from \"../../../assets/Login/BG2.jpg\"\r\nimport { getRegion } from \"../../../apis\";\r\nimport Bg from \"../../../assets/Login/BG2.jpg\";\r\n// context\r\nimport { AuthContext } from \"../../../contexts/AuthContext\";\r\n\r\nconst CountrySelector = React.lazy(() =>\r\n  import(\"../../../components/Common/CountrySelector\")\r\n);\r\nconst RegisterWrapper = styled.div`\r\n  // height:100vh;\r\n  // display:flex;\r\n  // align-items:center;\r\n  // justify-content: flex-start;\r\n  // position:relative;\r\n  // background-image:url(${Bg});\r\n  // background-position:center;\r\n  // background-size:cover;\r\n  // z-index:1;\r\n  // &::before{\r\n  //     content:\"\";\r\n  //     position:absolute;\r\n  //     background-color:rgba(0,0,0,0.6);\r\n  //     z-index:2;\r\n  //     width: 100vw;\r\n  //     height: 100vh;\r\n  // }\r\n`;\r\n//pattern\r\nconst lowerCaseLetters = /[a-z]/g;\r\nconst upperCaseLetters = /[A-Z]/g;\r\nconst numbers = /[0-9]/g;\r\n\r\nconst Index = () => {\r\n  //router\r\n  const navigate = useNavigate();\r\n  // \r\n  const {registerUser} = useContext(AuthContext)\r\n  //false is invalid\r\n  //true is valid\r\n  //string check\r\n  const [check, setCheck] = useState();\r\n  //num check\r\n  const [numCheck, setNumCheck] = useState();\r\n  const [fName, setFName] = useState();\r\n  const [lName, setLName] = useState();\r\n  const [pBar, setPBar] = useState(0);\r\n  //list region\r\n  const [listRegion, setListRegion] = useState([]);\r\n\r\n  //get api country\r\n  useEffect(() => {\r\n    //getRegion\r\n    getRegion()\r\n      .then((res) => {\r\n        setListRegion(res.data.results);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n  //check password secure\r\n  let keyN;\r\n  let keyL;\r\n  let keyU;\r\n  //phone check\r\n  const phoneCheck = (e) => {\r\n    const regEx = /\\b[0-9]+[0-9]\\b/g;\r\n    const value = e.target.value;\r\n    if (!value.match(regEx)) {\r\n      setNumCheck(false);\r\n    } else if (value.match(regEx)) {\r\n      setNumCheck(true);\r\n    }\r\n  };\r\n  //password check\r\n  const passwordCheck = (e) => {\r\n    const passwordCheck = e.target.value;\r\n    //lower\r\n    if (passwordCheck.match(lowerCaseLetters)) {\r\n      keyL = true;\r\n    } else {\r\n      keyL = false;\r\n    }\r\n    //upper\r\n    if (passwordCheck.match(upperCaseLetters)) {\r\n      keyU = true;\r\n    } else {\r\n      keyU = false;\r\n    }\r\n    //number\r\n    if (passwordCheck.match(numbers)) {\r\n      keyN = true;\r\n    } else {\r\n      keyN = false;\r\n    }\r\n    //check count\r\n    let count = 0;\r\n    if (keyL) {\r\n      count++;\r\n    } else {\r\n      count = count === 0 ? count : count--;\r\n    }\r\n    if (keyU) {\r\n      count++;\r\n    } else {\r\n      count = count === 0 ? count : count--;\r\n    }\r\n    if (keyN) {\r\n      count++;\r\n    } else {\r\n      count = count === 0 ? count : count--;\r\n    }\r\n    setPBar(count * 30);\r\n    if (passwordCheck.length > 8) setPBar(count * 30 + 10);\r\n  };\r\n\r\n  //email validation\r\n  const validateEmail = (e) => {\r\n    const emailRex =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRex.test(e.target.value)) {\r\n      setCheck(true);\r\n    } else if (!emailRex.test(e.target.value)) {\r\n      setCheck(false);\r\n    }\r\n    if (e.target.value === \"\") {\r\n      setCheck(undefined);\r\n    }\r\n  };\r\n  //name validation\r\n  const validator = (e, input) => {\r\n    //validation\r\n    const regEx = /\\b[A-Za-z]+[A-Za-z]\\b/g;\r\n    const value = e.target.value;\r\n    if (!value.match(regEx)) {\r\n      if (input === \"fname\") setFName(false);\r\n      else if (input === \"lname\") setLName(false);\r\n    } else if (value.match(regEx)) {\r\n      if (input === \"fname\") setFName(true);\r\n      else if (input === \"lname\") setLName(true);\r\n    }\r\n    // 2way binding\r\n    setRegisterForm({\r\n      ...registerForm,\r\n      [e.target.name]:e.target.value\r\n    })}\r\n  // Register handler\r\n  //constructor\r\n  const [registerForm, setRegisterForm] = useState({\r\n    email:\"\", firstName:\"\", lastName:\"\", password :\"\",city:\"\",address:\"\",\r\n  });\r\n  // handle submit register\r\n  const handlerRegister = async (e)=>{\r\n    e.preventDefault();\r\n    try {\r\n      const registerData = await registerUser(registerForm);\r\n      if (registerData.success) {\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message); \r\n    }\r\n  }\r\n  return (\r\n    <RegisterWrapper>\r\n      {/* <LazyLoadImage\r\n      width=\"900px\"\r\n      className=\"login__img\"\r\n      src={CenterPic}\r\n      /> */}\r\n      <div className=\"grid wide WrapperShop\">\r\n        <Form className=\"formWrap\" action=\"/api/auth/register\" method=\"POST\"\r\n                onSubmit={handlerRegister}\r\n        >\r\n          {/* Email input */}\r\n          <Row className=\"my-3 justify-content-center\">\r\n            <Col className=\"relative-7 \" md={8}>\r\n              <FormGroup floating>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"emailInput\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  onInput={(e) => validateEmail(e)}\r\n                  onChange={(e)=>setRegisterForm({\r\n                    ...registerForm,\r\n                    [e.target.name]:e.target.value\r\n                  })}\r\n                  valid={check === true}\r\n                  invalid={check === false}\r\n                />\r\n                <Label style={{ color: \"#ccc\" }} htmlFor=\"emailInput\">\r\n                  example@gmail.com\r\n                </Label>\r\n                <FormFeedback invalid>Incorrect email</FormFeedback>\r\n                <FormFeedback valid>That look good</FormFeedback>\r\n                <FormText>Email</FormText>\r\n                {/* wrong email */}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* First name input */}\r\n          <Row className=\"my-3 justify-content-center\">\r\n            <Col className=\"relative-7 \" md={4}>\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"fNameInput\"\r\n                  placeholder=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={(e) => validator(e, \"fname\")}\r\n                  valid={fName === true}\r\n                  invalid={fName === false}\r\n                  required\r\n                />\r\n                <Label style={{ color: \"#ccc\" }} htmlFor=\"fNameInput\">\r\n                  John\r\n                </Label>\r\n                <FormFeedback valid>Sweet!</FormFeedback>\r\n                <FormFeedback invalid>Incorrect</FormFeedback>\r\n                <FormText>First name</FormText>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col className=\"relative-7 \" md={4}>\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"lNameInput\"\r\n                  placeholder=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={(e) => validator(e, \"lname\")}\r\n                  valid={lName === true}\r\n                  invalid={lName === false}\r\n                  required\r\n                />\r\n                <Label style={{ color: \"#ccc\" }} htmlFor=\"lNameInput\">\r\n                  Kennedy\r\n                </Label>\r\n                <FormFeedback valid>Sweet!</FormFeedback>\r\n                <FormFeedback invalid>Incorrect</FormFeedback>\r\n                <FormText>Last name</FormText>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          {/* Phone */}\r\n          <Row className=\"my-3 justify-content-center\">\r\n            <Col className=\"relative-7\" md={8}>\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"phoneInput\"\r\n                  type=\"phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"phone\"\r\n                  required\r\n                  onChange={(e) => {\r\n                  \r\n                    phoneCheck(e)\r\n                  setRegisterForm({\r\n                      ...registerForm,\r\n                      [e.target.name]:e.target.value\r\n                    })\r\n                  }}\r\n                  valid={numCheck === true}\r\n                  invalid={numCheck === false}\r\n                />\r\n                <Label htmlFor=\"passwordInput\" style={{ color: \"#ccc\" }}>\r\n                  0786791782\r\n                </Label>\r\n                <FormFeedback invalid>Incorrect phone number</FormFeedback>\r\n                <FormFeedback valid>Correct phone number</FormFeedback>\r\n                <FormText>Phone</FormText>\r\n                <br />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          {/* Region selector */}\r\n          <Row className=\"my-3 justify-content-center relative-7 \">\r\n            <Col md={8}>\r\n              <Suspense fallback={<h1>Loading register</h1>}>\r\n                <CountrySelector regions={listRegion} />\r\n              </Suspense>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* password */}\r\n          <Row className=\"my-3 justify-content-center\">\r\n            <Col className=\"relative-7 \" md={8}>\r\n              {/* password input */}\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"passwordInput\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  onChange={(e) => {\r\n                    passwordCheck(e)\r\n                    setRegisterForm({\r\n                      ...registerForm,\r\n                      [e.target.name]:e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n                <Label htmlFor=\"passwordInput\" style={{ color: \"#ccc\" }}>\r\n                  Something secret\r\n                </Label>\r\n                <FormFeedback>Oh noes! that name is already taken</FormFeedback>\r\n                <FormText>Password</FormText>\r\n                <br />\r\n                <FormText className=\"recommendPassword\">\r\n                  <span>\r\n                    Should include : upper, lower, numbers and more than 8\r\n                    characters\r\n                  </span>\r\n                </FormText>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ProgressBar now={pBar} />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"my-3 justify-content-center formBt relative-7\">\r\n            <Col md={7}>\r\n              <FormGroup>\r\n                <Button className=\"submit__bt\" style={{}}>\r\n                  Submit\r\n                </Button>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={1}>\r\n              <Link to=\"/\" className=\"cancel__bt\" style={{}}>\r\n                <span>Cancel</span>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </RegisterWrapper>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}