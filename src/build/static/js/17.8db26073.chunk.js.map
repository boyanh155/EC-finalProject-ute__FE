{"version":3,"sources":["components/Form/login/index.js"],"names":["Index","loginUser","useContext","AuthContext","navigate","useNavigate","useState","check","setCheck","email","password","loginForm","setLoginForm","onChangeLoginForm","e","target","name","value","handlerOnLogin","a","preventDefault","success","console","log","message","className","onSubmit","action","method","md","floating","type","id","placeholder","onInput","emailRex","test","undefined","validateEmail","valid","invalid","required","onChange","style","color","htmlFor","to"],"mappings":"gPAmJeA,UAhID,WAAM,IAEVC,EAAcC,qBAAWC,KAAzBF,UAEFG,EAAWC,cAJC,EAUQC,qBAVR,mBAUXC,EAVW,KAUJC,EAVI,OA2BgBF,mBAAS,CACzCG,MAAO,GACPC,SAAU,KA7BM,mBA2BXC,EA3BW,KA2BAC,EA3BA,KAgCZC,EAAoB,SAACC,GAAD,OACxBF,EAAa,2BACRD,GADO,kBAETG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEtBR,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAGTQ,EAAc,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACrBL,EAAEM,iBADmB,kBAGKnB,EAAUU,GAHf,cAILU,SACZjB,EAAS,cALQ,gDASnBkB,QAAQC,IAAI,KAAMC,SATC,yDAAH,sDAapB,OACE,qBAAKC,UAAU,wBAAf,SACE,eAAC,IAAD,CACEC,SAAUR,EACVO,UAAU,WACVE,OAAO,kBACPC,OAAO,OAJT,UAOE,cAAC,IAAD,CAAKH,UAAU,8BAAf,SACE,cAAC,IAAD,CAAKA,UAAU,cAAcI,GAAI,EAAjC,SACE,eAAC,IAAD,CAAWC,UAAQ,EAAnB,UACE,cAAC,IAAD,CACEC,KAAK,QACLC,GAAG,aACHC,YAAY,QACZC,QAAS,SAACpB,GAAD,OAzDD,SAACA,GACrB,IAAMqB,EACJ,wJACEA,EAASC,KAAKtB,EAAEC,OAAOE,OACzBT,GAAS,GACC2B,EAASC,KAAKtB,EAAEC,OAAOE,QACjCT,GAAS,GAEY,KAAnBM,EAAEC,OAAOE,OACXT,OAAS6B,GAgDiBC,CAAcxB,IAC9ByB,OAAiB,IAAVhC,EACPiC,SAAmB,IAAVjC,EACTS,KAAK,QACLyB,UAAQ,EACRxB,MAAOR,EACPiC,SAAU,SAAC5B,GAAD,OAAOD,EAAkBC,MAErC,cAAC,IAAD,CAAO6B,MAAO,CAAEC,MAAO,QAAUC,QAAQ,aAAzC,wBAGA,cAAC,IAAD,CAAcL,SAAO,EAArB,6BACA,cAAC,IAAD,CAAcD,OAAK,EAAnB,4BACA,cAAC,IAAD,2BAMN,cAAC,IAAD,CAAKd,UAAU,yBAAf,SACE,cAAC,IAAD,CAAKA,UAAU,cAAcI,GAAI,EAAjC,SACE,eAAC,IAAD,CAAWC,UAAQ,EAAnB,UACE,cAAC,IAAD,CACEC,KAAK,WACLC,GAAG,gBACHC,YAAY,UACZjB,KAAK,WACLyB,UAAQ,EACRxB,MAAOP,EACPgC,SAAU,SAAC5B,GAAD,OAAOD,EAAkBC,MAErC,cAAC,IAAD,CAAO6B,MAAO,CAAEC,MAAO,QAAUC,QAAQ,aAAzC,2BAGA,cAAC,IAAD,8BAMN,eAAC,IAAD,CAAKpB,UAAU,2CAAf,UACE,cAAC,IAAD,CAAKI,GAAI,EAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQJ,UAAU,aAAakB,MAAO,GAAtC,wBAKJ,cAAC,IAAD,CAAKd,GAAI,EAAT,SACE,cAAC,IAAD,CAAMiB,GAAG,IAAIrB,UAAU,aAAakB,MAAO,GAA3C,SACE","file":"static/js/17.8db26073.chunk.js","sourcesContent":["import React, { Suspense, useState, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../../../assets/css/member/register.css\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  FormFeedback,\r\n  FormText,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { AuthContext } from \"../../../contexts/AuthContext\";\r\n//pattern\r\nconst lowerCaseLetters = /[a-z]/g;\r\nconst upperCaseLetters = /[A-Z]/g;\r\nconst numbers = /[0-9]/g;\r\nconst Index = () => {\r\n  //Context\r\n  const { loginUser } = useContext(AuthContext);\r\n  //Router\r\n  const navigate = useNavigate();\r\n\r\n  //State\r\n  //false is invalid\r\n  //true is valid\r\n  //string check\r\n  const [check, setCheck] = useState();\r\n  //email validation\r\n  const validateEmail = (e) => {\r\n    const emailRex =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRex.test(e.target.value)) {\r\n      setCheck(true);\r\n    } else if (!emailRex.test(e.target.value)) {\r\n      setCheck(false);\r\n    }\r\n    if (e.target.value === \"\") {\r\n      setCheck(undefined);\r\n    }\r\n  };\r\n\r\n  // Login handler\r\n  //constructor\r\n  const [loginForm, setLoginForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  //get data from input\r\n  const onChangeLoginForm = (e) =>\r\n    setLoginForm({\r\n      ...loginForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  const { email, password } = loginForm;\r\n\r\n  //onSubmit handler\r\n  const handlerOnLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginData = await loginUser(loginForm);\r\n      if (loginData.success) {\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid wide WrapperShop\">\r\n      <Form\r\n        onSubmit={handlerOnLogin}\r\n        className=\"formWrap\"\r\n        action=\"/api/auth/login\"\r\n        method=\"POST\"\r\n      >\r\n        {/* Email input */}\r\n        <Row className=\"my-4 justify-content-center\">\r\n          <Col className=\"relative-7 \" md={8}>\r\n            <FormGroup floating>\r\n              <Input\r\n                type=\"email\"\r\n                id=\"emailInput\"\r\n                placeholder=\"Email\"\r\n                onInput={(e) => validateEmail(e)}\r\n                valid={check === true}\r\n                invalid={check === false}\r\n                name=\"email\"\r\n                required\r\n                value={email}\r\n                onChange={(e) => onChangeLoginForm(e)}\r\n              />\r\n              <Label style={{ color: \"#ccc\" }} htmlFor=\"emailInput\">\r\n                Your email\r\n              </Label>\r\n              <FormFeedback invalid>Incorrect email</FormFeedback>\r\n              <FormFeedback valid>That look good</FormFeedback>\r\n              <FormText>Email</FormText>\r\n              {/* wrong email */}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        {/* password */}\r\n        <Row className=\"justify-content-center\">\r\n          <Col className=\"relative-7 \" md={8}>\r\n            <FormGroup floating>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"passwordInput\"\r\n                placeholder=\"Pasword\"\r\n                name=\"password\"\r\n                required\r\n                value={password}\r\n                onChange={(e) => onChangeLoginForm(e)}\r\n              />\r\n              <Label style={{ color: \"#ccc\" }} htmlFor=\"emailInput\">\r\n                Your password\r\n              </Label>\r\n              <FormText>Password</FormText>\r\n              {/* wrong email */}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center formBt relative-7\">\r\n          <Col md={7}>\r\n            <FormGroup>\r\n              <Button className=\"submit__bt\" style={{}}>\r\n                Submit\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={1}>\r\n            <Link to=\"/\" className=\"cancel__bt\" style={{}}>\r\n              <span>Cancel</span>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}